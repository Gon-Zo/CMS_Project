buildscript {
    dependencies {
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydsl_version}"
    }
}

plugins {
    id 'org.springframework.boot' version "${spring_version}"
    id 'io.spring.dependency-management' version "${dependency_management}"
    id 'java'
}

apply from:'gradle/utils.gradle'
apply from:'gradle/querydsl.gradle'

group = 'com.gonzo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    implementation "org.springframework.security:spring-security-core:5.3.4.RELEASE"
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}
